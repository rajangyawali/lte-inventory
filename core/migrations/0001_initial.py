# Generated by Django 2.2 on 2020-08-13 11:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AntennaModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ant_model', models.CharField(max_length=20, verbose_name='Antenna Model')),
            ],
            options={
                'verbose_name_plural': 'Antenna Model',
            },
        ),
        migrations.CreateModel(
            name='BatteryModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batt_model', models.CharField(max_length=20, verbose_name='Battery Model')),
            ],
            options={
                'verbose_name_plural': 'Battery Model',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=20, verbose_name='Manufacturer')),
            ],
            options={
                'verbose_name_plural': 'Manufacturer',
            },
        ),
        migrations.CreateModel(
            name='RectifierModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rect_model', models.CharField(max_length=20, verbose_name='Rectifier Model')),
            ],
            options={
                'verbose_name_plural': 'Rectifier Model',
            },
        ),
        migrations.CreateModel(
            name='RectifierModuleModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rect_module_model', models.CharField(max_length=20, verbose_name='Rectifier Module Model')),
            ],
            options={
                'verbose_name_plural': 'Rectifier Modules Model',
            },
        ),
        migrations.CreateModel(
            name='RRUModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rru_model', models.CharField(max_length=20, verbose_name='RRU Model')),
            ],
            options={
                'verbose_name_plural': 'RRU Model',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField(max_length=8, verbose_name='Site ID')),
                ('site_name', models.CharField(max_length=50, verbose_name='Site Name')),
                ('province', models.CharField(choices=[('Province 1', 'Province 1'), ('Province 2', 'Province 2'), ('Bagmati', 'Bagmati'), ('Gandaki', 'Gandaki'), ('Province 5', 'Province 5'), ('Karnali', 'Karnali'), ('Sudur Paschim', 'Sudur Paschim')], max_length=20)),
                ('region', models.CharField(choices=[('EDR', 'EDR'), ('CDR', 'CDR'), ('KTM', 'KTM'), ('WDR', 'WDR'), ('MWDR', 'MWDR'), ('FWDR', 'FWDR')], max_length=4)),
                ('district', models.CharField(choices=[('Kathmandu', 'Kathmandu'), ('Bhaktapur', 'Bhaktapur'), ('Lalitpur', 'Lalitpur')], max_length=20)),
                ('municipality', models.CharField(max_length=40, null=True, verbose_name='Municipality/Rural Municipality')),
                ('ward', models.PositiveIntegerField(null=True, verbose_name='Ward No')),
                ('address', models.CharField(max_length=50, null=True, verbose_name='Address')),
                ('latitude', models.FloatField(blank=True, max_length=10, null=True)),
                ('longitude', models.FloatField(blank=True, max_length=10, null=True)),
                ('added_on', models.DateTimeField(auto_now_add=True, verbose_name='Added On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
            ],
            options={
                'verbose_name_plural': 'Sites',
            },
        ),
        migrations.CreateModel(
            name='TransmissionEquipmentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teq_model', models.CharField(max_length=20, verbose_name='Transmission Equipment Model')),
            ],
            options={
                'verbose_name_plural': 'Transmission Equipment Model',
            },
        ),
        migrations.CreateModel(
            name='TransmissionEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('te_transmission_type', models.CharField(choices=[('Optical', 'Optical'), ('Radio', 'Radio')], max_length=10, verbose_name='Transmission Type')),
                ('te_serial_number', models.CharField(blank=True, default='NA', max_length=40, null=True, verbose_name='Serial Number')),
                ('te_sfps_number', models.PositiveIntegerField(verbose_name='Number of SFPs')),
                ('te_added_on', models.DateTimeField(auto_now_add=True, verbose_name='Added On')),
                ('te_updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transmissionequipments', to='core.Site')),
                ('te_manufacturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Manufacturer', verbose_name='Manufacturer')),
                ('te_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.TransmissionEquipmentModel', verbose_name='Model')),
            ],
            options={
                'verbose_name_plural': 'Transmission Equipments',
            },
        ),
        migrations.CreateModel(
            name='RectifierEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rectifier_serial_number', models.CharField(blank=True, default='NA', max_length=40, null=True, verbose_name='Rectifier Serial Number')),
                ('rectifier_installed_module', models.PositiveIntegerField(verbose_name='Installed Modules')),
                ('rectifier_running_module', models.PositiveIntegerField(verbose_name='Running Modules')),
                ('rectifier_added_on', models.DateTimeField(auto_now_add=True, verbose_name='Added On')),
                ('rectifier_updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('rectifier_manufacturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Manufacturer', verbose_name='Manufacturer')),
                ('rectifier_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.RectifierModel', verbose_name='Rectifier Model')),
                ('rectifier_module_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.RectifierModuleModel', verbose_name='Rectifier Module Model')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rectifierequipments', to='core.Site')),
            ],
            options={
                'verbose_name_plural': 'Rectifier Equipments',
            },
        ),
        migrations.CreateModel(
            name='RadioEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('radio_subrack_number', models.CharField(choices=[('70', '70'), ('71', '71'), ('72', '72'), ('80', '80'), ('81', '81'), ('82', '82')], max_length=10, verbose_name='Subrack Number')),
                ('radio_band', models.CharField(choices=[('B3', 'B3'), ('B20', 'B20')], max_length=20, verbose_name='Band')),
                ('radio_operating_range', models.CharField(blank=True, choices=[('TX1805-1880/RX1710-1785', 'TX1805-1880/RX1710-1785'), ('TX791-821/RX832-862', 'TX791-821/RX832-862')], max_length=40, null=True, verbose_name='Operating Range (MHz)')),
                ('radio_gain', models.FloatField(default=9.8, max_length=20, verbose_name='Gain')),
                ('radio_configuration', models.CharField(choices=[('2T2R', '2T2R'), ('2T4R', '2T4R'), ('4T4R', '4T4R')], max_length=20, verbose_name='Configuration')),
                ('radio_power', models.PositiveIntegerField(default=40, verbose_name='Power')),
                ('radio_serial_number', models.CharField(blank=True, default='NA', max_length=40, null=True, verbose_name='RRU Serial Number')),
                ('radio_added_on', models.DateTimeField(auto_now_add=True, verbose_name='Added On')),
                ('radio_updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('radio_manufacturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Manufacturer', verbose_name='Manufacturer')),
                ('radio_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.RRUModel', verbose_name='RRU Model')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='radioequipments', to='core.Site')),
            ],
            options={
                'verbose_name_plural': 'Radio Equipments',
            },
        ),
        migrations.CreateModel(
            name='NTTeamLeadInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=100, verbose_name='Team Leader Name')),
                ('team_address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Team Leader Address')),
                ('team_mobile', models.CharField(max_length=10, verbose_name='Mobile Number')),
                ('team_landline', models.CharField(blank=True, max_length=9, null=True, verbose_name='Landline Number')),
                ('employee_id', models.PositiveIntegerField(verbose_name='Employee ID')),
                ('team_added_on', models.DateTimeField(auto_now_add=True, verbose_name='Added On')),
                ('team_updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teamleader', to='core.Site')),
            ],
            options={
                'verbose_name_plural': 'NT Team Leaders',
            },
        ),
        migrations.CreateModel(
            name='HouseOwnerInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_name', models.CharField(max_length=100, verbose_name='House Owner Name')),
                ('owner_address', models.CharField(blank=True, max_length=200, null=True, verbose_name='House Owner Address')),
                ('owner_mobile', models.CharField(max_length=10, verbose_name='Mobile Number')),
                ('owner_landline', models.CharField(blank=True, max_length=9, null=True, verbose_name='Landline Number')),
                ('key', models.CharField(max_length=1000, verbose_name='Key Information')),
                ('owner_added_on', models.DateTimeField(auto_now_add=True, verbose_name='Added On')),
                ('owner_updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='core.Site')),
            ],
            options={
                'verbose_name_plural': 'House Owner Information',
            },
        ),
        migrations.CreateModel(
            name='BatteryEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('battery_banks', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=1, verbose_name='Number of Banks')),
                ('battery_added_by', models.CharField(max_length=20, null=True, verbose_name='Added By')),
                ('battery_added_on', models.DateTimeField(auto_now_add=True, verbose_name='Added On')),
                ('battery_updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('battery_manufacturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Manufacturer', verbose_name='Manufacturer')),
                ('battery_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.BatteryModel', verbose_name='Battery Model')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batteryequipments', to='core.Site')),
            ],
            options={
                'verbose_name_plural': 'Battery Equipments',
            },
        ),
        migrations.CreateModel(
            name='BasebandEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bbu_model', models.CharField(choices=[('BBU3910', 'BBU3910')], max_length=20, verbose_name='BBU Model')),
                ('bbu_serial_number', models.CharField(blank=True, default='NA', max_length=40, null=True, verbose_name='BBU Serial Number')),
                ('ubbp_model', models.CharField(choices=[('UBBPe4', 'UBBPe4')], max_length=20, verbose_name='UBBP Model')),
                ('ubbp_quantity', models.PositiveIntegerField(blank=True, default=1, verbose_name='UBBP Quantity')),
                ('umpt_model', models.CharField(choices=[('UMPTb9', 'UMPTb9')], max_length=20, verbose_name='UMPT Model')),
                ('umpt_quantity', models.PositiveIntegerField(blank=True, default=1, verbose_name='UMPT Quantity')),
                ('upeu_model', models.CharField(choices=[('UPEU', 'UPEU')], max_length=20, verbose_name='UPEU Model')),
                ('fan_model', models.CharField(choices=[('FAN', 'FAN')], max_length=20, verbose_name='Fan Model')),
                ('bbu_added_on', models.DateTimeField(auto_now_add=True, verbose_name='Added On')),
                ('bbu_updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('bbu_manufacturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Manufacturer', verbose_name='Manufacturer')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basebandequipments', to='core.Site')),
            ],
            options={
                'verbose_name_plural': 'Baseband Equipments',
            },
        ),
        migrations.CreateModel(
            name='AntennaEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('antenna_sector_id', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], verbose_name='Sector ID')),
                ('antenna_serial_number', models.CharField(blank=True, default='NA', max_length=40, null=True, verbose_name='Antenna Serial Number')),
                ('antenna_added_on', models.DateTimeField(auto_now_add=True, verbose_name='Added On')),
                ('antenna_updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('antenna_manufacturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Manufacturer', verbose_name='Manufacturer')),
                ('antenna_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.AntennaModel', verbose_name='Antenna Model')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='antennaequipments', to='core.Site')),
            ],
            options={
                'verbose_name_plural': 'Antenna Equipments',
            },
        ),
    ]
